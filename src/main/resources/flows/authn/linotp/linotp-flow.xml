<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
      parent="authn.abstract, authn/conditions">

    <var name="currentTime" class="java.util.Date" />
    
    <decision-state id="checkFirstLogin">
    	<if test="(currentTime.getTime() - opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.SessionContext)).getIdPSession().getCreationInstant()) > 120000"
            then="checkForceAuth"
            else="linotp" />   
    </decision-state>
    <decision-state id="checkForceAuth">
        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isForceAuthn()"
            then="CallPasswordFlow"
            else="linotp" />
    </decision-state>
    
    <subflow-state id="CallPasswordFlow" subflow="authn/Password">
        <input name="calledAsSubflow" value="true"/>
        <transition on="proceed" to="linotp"/>
    </subflow-state>

    <view-state id="linotp" view="linotp">
        <on-entry>
        	<evaluate expression="TokenGenerator" />
            <evaluate expression="environment" result="viewScope.environment"/>
			<evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
			<evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext))"
				result="viewScope.authenticationContext" />
			<evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
			<evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
			<evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
        </on-entry>
        <transition on="proceed" bind="true" validate="false" to="extractLinotpFromForm"/>
    </view-state>
 
	<action-state id="extractLinotpFromForm">
		<evaluate expression="ExtractTokenFromForm" />
		<evaluate expression="'proceed'" />

		<transition on="InvalidCredentials" to="linotp" />
		<transition on="proceed" to="validateLinotpResponse" />
	</action-state>
 
    <action-state id="validateLinotpResponse">
        <evaluate expression="LinotpTokenValidator"/>
        <evaluate expression="'proceed'"/>
		
		<transition on="InvalidCredentials" to="linotp" />
		<transition on="NoCredentials" to="linotp" />
		<!-- At the moment user is redirected back to the totp form is he/she hasn't registered token -->
		<transition on="AccountError" to="linotp" />

        <transition on="proceed" to="proceed"/>        
    </action-state>
    
	<bean-import resource="../../../conf/authn/linotp-authn-beans.xml" />
    
</flow>